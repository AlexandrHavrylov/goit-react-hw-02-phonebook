{"version":3,"sources":["styles/Form.styled.jsx","components/Form/Form.jsx","styles/Contacts.styled.jsx","components/Contacts/Contacts.jsx","styles/App.styled.jsx","components/Filter/Filter.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Label","label","Input","input","Button","button","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactsList","ul","Contact","li","ContactInfo","span","DeleteBtn","Contacts","contacts","onDeleteContact","map","id","onClick","MainContainer","div","Title","h1","Section","Filter","onFilterChange","App","filter","addContact","contactData","contact","uuidv4","find","alert","handlerOnFilterChange","handlerOnDelteContact","prevState","getFilterContacts","normalizedFilterValue","toLowerCase","trim","includes","filterContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAEaA,EAAaC,IAAOC,KAAV,0SAaVC,EAAQF,IAAOG,MAAV,6IAQLC,EAAQJ,IAAOK,MAAV,sGAOLC,EAASN,IAAOO,OAAV,8P,OCzBNC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGN,EAAOK,KATd,EAaEE,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKO,SAAS,CACZN,KAAM,GACNC,OAAQ,MAlBd,4CAsBE,WACE,MAAyBU,KAAKZ,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,8BACE,eAACZ,EAAD,CAAYqB,SAAUC,KAAKJ,aAA3B,UACE,eAACf,EAAD,gCAEE,cAACE,EAAD,CACEkB,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRV,MAAOL,EACPgB,SAAUL,KAAKT,kBAGnB,eAACV,EAAD,wDAEE,cAACE,EAAD,CACEkB,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRV,MAAOJ,EACPe,SAAUL,KAAKT,kBAInB,cAACN,EAAD,CAAQgB,KAAK,SAAb,kCApDV,GAA0BK,aCHbC,EAAe5B,IAAO6B,GAAV,iFAMZC,EAAU9B,IAAO+B,GAAV,iXAiBPC,EAAchC,IAAOiC,KAAV,iJAWXC,EAAYlC,IAAOO,OAAV,6P,QC7BT4B,EAAW,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBACnC,OACE,gCACE,0CACA,cAACT,EAAD,UACGQ,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAACmB,EAAD,WACE,eAACE,EAAD,WACE,cAAC,IAAD,IADF,IACqBtB,EADrB,KAC6BC,KAE7B,cAACuB,EAAD,CAAWM,QAAS,kBAAMH,EAAgBE,IAAKjB,KAAK,SAApD,sBAJYiB,Y,QCXXE,EAAgBzC,IAAO0C,IAAV,4IASbC,EAAQ3C,IAAO4C,GAAV,gDAILC,EAAU7C,IAAO0C,IAAV,8CCXPI,EAAS,SAAC,GAAD,IAAG/B,EAAH,EAAGA,MAAOgC,EAAV,EAAUA,eAAV,OACpB,cAACF,EAAD,UACE,eAAC3C,EAAD,mCAEE,cAACE,EAAD,CAAOkB,KAAK,OAAOP,MAAOA,EAAOW,SAAUqB,UCApCC,EAAb,4MACEvC,MAAQ,CACN2B,SAAU,CACR,CAAEG,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE4B,GAAI,OAAQ7B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,cAEhDsC,OAAQ,IARZ,EAWEC,WAAa,SAACC,GACZ,IAAQf,EAAa,EAAK3B,MAAlB2B,SACFgB,EAAO,aAAKb,GAAIc,eAAaF,GAEnCf,EAASkB,MAAK,SAACF,GAAD,OAAaA,EAAQ1C,OAASyC,EAAYzC,QACpD6C,MAAM,GAAD,OAAIH,EAAQ1C,KAAZ,4BACL,EAAKM,UAAS,gBAAGoB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEgB,GAAH,mBAAehB,SAlBjC,EAsBEoB,sBAAwB,SAAC3C,GACvB,EAAKG,SAAS,CACZiC,OAAQpC,EAAEC,cAAcC,SAxB9B,EA4BE0C,sBAAwB,SAAClB,GACvB,EAAKvB,UAAS,SAAC0C,GAAD,MAAgB,CAC5BtB,SAAUsB,EAAUtB,SAASa,QAAO,SAACG,GAAD,OAAaA,EAAQb,KAAOA,UA9BtE,EAkCEoB,kBAAoB,WAClB,MAA6B,EAAKlD,MAA1B2B,EAAR,EAAQA,SAEFwB,EAFN,EAAkBX,OAEmBY,cAAcC,OAEnD,OAAO1B,EAASa,QAAO,SAACG,GAAD,OACrBA,EAAQ1C,KAAKmD,cAAcE,SAASH,OAxC1C,4CA4CE,WACE,IAAQX,EAAW5B,KAAKZ,MAAhBwC,OAEFe,EAAiB3C,KAAKsC,oBAE5B,OACE,eAAClB,EAAD,WACE,cAACE,EAAD,wBACA,cAAC,EAAD,CAAMvB,SAAUC,KAAK6B,aACrB,cAAC,EAAD,CAAQnC,MAAOkC,EAAQF,eAAgB1B,KAAKmC,wBAE5C,cAAC,EAAD,CACEpB,SAAU4B,EACV3B,gBAAiBhB,KAAKoC,+BAzDhC,GAAyB9B,aCIVsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.614a1b30.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const StyledForm = styled.form`\r\n  width: 600px;\r\n  padding: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  border: 1px black solid;\r\n  border-radius: 5px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-shadow: rgb(25 26 27 / 20%) 4px 4px 8px 0px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-size: 16px;\r\n  width: 300px;\r\n  padding: 4px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: #8ecafc;\r\n  }\r\n`;\r\n","import { Label, Button, Input, StyledForm } from \"styles/Form.styled\";\r\n\r\nimport { PropTypes } from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <StyledForm onSubmit={this.handleSubmit}>\r\n          <Label>\r\n            Имя\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Label>\r\n          <Label>\r\n            Телефон\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Label>\r\n\r\n          <Button type=\"submit\">Add contact</Button>\r\n        </StyledForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactsList = styled.ul`\r\n  margin: 0;\r\n  padding: 24px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  position: relative;\r\n  padding: 10px;\r\n  padding-left: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  border: 1px gray solid;\r\n  border-radius: 10px;\r\n  box-shadow: rgb(25 26 27 / 20%) 1px 1px 1px 1px;\r\n  :not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const ContactInfo = styled.span`\r\n  margin-right: 56px;\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 5px;\r\n    color: #010174;\r\n  }\r\n`;\r\n\r\nexport const DeleteBtn = styled.button`\r\n  display: block;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border: 0.5px black solid;\r\n  &:hover {\r\n    background-color: tomato;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ContactInfo } from \"styles/Contacts.styled\";\r\nimport { Contact } from \"styles/Contacts.styled\";\r\nimport { DeleteBtn } from \"styles/Contacts.styled\";\r\nimport { ImAddressBook } from \"react-icons/im\";\r\nimport { ContactsList } from \"styles/Contacts.styled\";\r\n\r\nexport const Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      <ContactsList>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <Contact key={id}>\r\n            <ContactInfo>\r\n              <ImAddressBook /> {name}: {number}\r\n            </ContactInfo>\r\n            <DeleteBtn onClick={() => onDeleteContact(id)} type=\"button\">\r\n              Delete\r\n            </DeleteBtn>\r\n          </Contact>\r\n        ))}\r\n      </ContactsList>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 24px;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  padding: 24px;\r\n`;\r\n","import { Input, Label } from \"styles/Form.styled\";\r\nimport React from \"react\";\r\nimport { Section } from \"styles/App.styled\";\r\n\r\nexport const Filter = ({ value, onFilterChange }) => (\r\n  <Section>\r\n    <Label>\r\n      Find contatcs by Name\r\n      <Input type=\"text\" value={value} onChange={onFilterChange} />\r\n    </Label>\r\n  </Section>\r\n);\r\n","import React, { Component } from \"react\";\nimport { Form } from \"components/Form/Form\";\nimport { Contacts } from \"components/Contacts/Contacts\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { MainContainer } from \"styles/App.styled\";\nimport { Title } from \"../../styles/App.styled\";\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rossie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (contactData) => {\n    const { contacts } = this.state;\n    const contact = { id: uuidv4(), ...contactData };\n\n    contacts.find((contact) => contact.name === contactData.name)\n      ? alert(`${contact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  handlerOnFilterChange = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  handlerOnDelteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilterValue = filter.toLowerCase().trim();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilterValue)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filterContacts = this.getFilterContacts();\n\n    return (\n      <MainContainer>\n        <Title>Phonebook</Title>\n        <Form onSubmit={this.addContact} />\n        <Filter value={filter} onFilterChange={this.handlerOnFilterChange} />\n\n        <Contacts\n          contacts={filterContacts}\n          onDeleteContact={this.handlerOnDelteContact}\n        />\n      </MainContainer>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}